experiments:
  runs: 1
  seed: 42
  device: 'cuda'
  epochs: 10
  #data to use
  data:
    dataset: 'mnist'
    data_path: 
    num_classes: 10

  # network architecture:
  net:
    type: 'ConvNet'
    netparams:
      num_classes: ${experiments.data.num_classes} 
  # learning algorithm:
  learner:
    type: 'backprop' # Choices: 'backprop', 'continual_backprop'
    device: ${experiments.device}
    opt: 'adam'
    loss: 'nll' # Choices: 'nll', 'mse', for classification and regression respectively
    step_size: 0.01
    beta_1: 0.95
    beta_2: 0.999
    weight_decay: 0.01
    to_perturb: false
    perturb_scale: 0.05
    momentum: 0.9

  # evaluation, for plotting and saving the results of the
  evaluation:
    eval_freq_epoch: 1
    eval_metrics: ['accuracy', 'loss']
    save_dir: 'results_raw'
    save_name: 'basic_training'
