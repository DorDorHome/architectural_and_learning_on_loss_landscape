# represent experiments config:
runs: 1
run_id: None
seed: 42
device: 'cuda:0'
epochs: 1000
batch_size: 128 #128

# for logging and tracking the experiments
use_wandb: True
use_json: False
log_freq_every_n_task: 1
wandb:
  project: 'basic_training'
  entity: ''
  # tags: ['shifting_tasks', 'Imagenet']
  # notes: 'basic training on Imagenet with shifting tasks'



#data to use
data:
  dataset: 'CIFAR10' #'ImageNet' #options: 'MNIST' #'CIFAR10', to implement: 'CIFAR100'. 'ImageNet' not supported yet.
  use_torchvision: True # if using Imagnet, set to False 
  data_path: '/hdda/datasets'    # '/home/sfchan/datasets' for 243, otherwise '/hdda/datasets'   #if specified, will override the dataset variable.
  # for Imagnet, expected path is folder containing the downloaded Imagnet dataset, + '/data/classes/'
  num_classes: 10 # should be consistent with the number of classes in the dataset




# network architecture:
net:
  type: "full_rank_resnet_custom" # "vgg_custom" #options: 'ConvNet', "vgg_custom" , "resnet_custom" , 'full_rank_resnet_custom'
  netparams:
    pretrained: False
    num_classes: ${data.num_classes} 
    initialization: 'kaiming'
    activation: 'elu' # 'relu', 'leaky_relu' 'sigmoid' 'tanh' 'selu' 'swish' 'elu'


    
# learning algorithm:
learner:
  type: 'backprop'  # Choices: 'backprop', 'cbp',# 'continual_backprop'
  # needed only for cbp:
  # neurons_replacement_rate: 0.001
  # decay_rate_utility_track: 0.9
  # maturity_threshold: 100
  # util_type: 'contribution'
  # init: 'kaiming'
  # accumulate: False
  # outgoing_random: False

  # needed for continual backprop and cbp:
  device: ${device}
  opt:  'adam' # Choices: 'sgd',  'adam'
  loss: 'cross_entropy' # Choices: 'cross_entropy', 'mse', for classification and regression respectively
  step_size: 0.001 # for sgd try 0.01, adam try 
  beta_1: 0.95
  beta_2: 0.999
  weight_decay: 0.01
  to_perturb: false
  perturb_scale: 0.05
  momentum: 0.9

# evaluation, for plotting and saving the results of the
evaluation:
  use_testset: False
  eval_freq_epoch: 1
  eval_metrics: ['accuracy', 'loss']
  # save_dir: '/results/results_raw' # If not provided, will be created inside the experiment folder,assume root directory is the root of the experiments
  # save_name: 'basic_training'
